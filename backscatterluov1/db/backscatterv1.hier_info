|backscatterv1
clk => clk.IN1
rst_n => rst_n.IN1
clkout1 <= process:the_proc.sig
clkout2 <= process:the_proc.ctrl1
clkout3 <= process:the_proc.pwm
clkout4 <= <GND>
clkp <= <GND>
key0 => ~NO_FANOUT~
led0 <= <GND>


|backscatterv1|ppl:m1
inclk0 => sub_wire1[0].IN1
c0 <= altpll:altpll_component.clk
c1 <= altpll:altpll_component.clk


|backscatterv1|ppl:m1|altpll:altpll_component
inclk[0] => ppl_altpll:auto_generated.inclk[0]
inclk[1] => ppl_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|backscatterv1|ppl:m1|altpll:altpll_component|ppl_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|backscatterv1|process:the_proc
clk => data[0].CLK
clk => data[1].CLK
clk => data[2].CLK
clk => data[3].CLK
clk => data[4].CLK
clk => data[5].CLK
clk => data[6].CLK
clk => data[7].CLK
clk => data[8].CLK
clk => data[9].CLK
clk => data[10].CLK
clk => data[11].CLK
clk => data[12].CLK
clk => data[13].CLK
clk => data[14].CLK
clk => data[15].CLK
clk => data[16].CLK
clk => data[17].CLK
clk => data[18].CLK
clk => data[19].CLK
clk => cnt_1ms[0].CLK
clk => cnt_1ms[1].CLK
clk => cnt_1ms[2].CLK
clk => cnt_1ms[3].CLK
clk => cnt_1ms[4].CLK
clk => cnt_1ms[5].CLK
clk => cnt_1ms[6].CLK
clk => cnt_1ms[7].CLK
clk => cnt_1ms[8].CLK
clk => cnt_1ms[9].CLK
clk => cnt_1ms[10].CLK
clk => cnt_1ms[11].CLK
clk => cnt_1ms[12].CLK
clk => cnt_1ms[13].CLK
clk => cnt_1ms[14].CLK
clk => cnt_1ms[15].CLK
clk => cnt_1ms[16].CLK
clk => cnt_1ms[17].CLK
clk => cnt_1ms[18].CLK
clk => cnt_1ms[19].CLK
clk => cnt_1ms[20].CLK
clk => cnt_1ms[21].CLK
clk => cnt_1ms[22].CLK
clk => cnt_1ms[23].CLK
clk => cnt_1ms[24].CLK
clk => cnt_1ms[25].CLK
clk => cnt_1ms[26].CLK
clk => cnt_1ms[27].CLK
clk => cnt_1ms[28].CLK
clk => cnt_1ms[29].CLK
clk => cnt_1ms[30].CLK
clk => cnt_1ms[31].CLK
clk => pwm~reg0.CLK
clk => cnt_500k[0].CLK
clk => cnt_500k[1].CLK
clk => cnt_500k[2].CLK
clk => cnt_500k[3].CLK
clk => cnt_500k[4].CLK
clk => cnt_500k[5].CLK
clk => cnt_500k[6].CLK
clk => cnt_500k[7].CLK
clk => cnt_500k[8].CLK
clk => cnt_500k[9].CLK
clk => cnt_500k[10].CLK
clk => cnt_500k[11].CLK
clk => cnt_500k[12].CLK
clk => cnt_500k[13].CLK
clk => cnt_500k[14].CLK
clk => cnt_500k[15].CLK
clk => cnt_500k[16].CLK
clk => cnt_500k[17].CLK
clk => cnt_500k[18].CLK
clk => cnt_500k[19].CLK
clk => cnt_500k[20].CLK
clk => cnt_500k[21].CLK
clk => cnt_500k[22].CLK
clk => cnt_500k[23].CLK
clk => cnt_500k[24].CLK
clk => cnt_500k[25].CLK
clk => cnt_500k[26].CLK
clk => cnt_500k[27].CLK
clk => cnt_500k[28].CLK
clk => cnt_500k[29].CLK
clk => cnt_500k[30].CLK
clk => cnt_500k[31].CLK
rst_n => cnt_500k[0].ACLR
rst_n => cnt_500k[1].ACLR
rst_n => cnt_500k[2].ACLR
rst_n => cnt_500k[3].ACLR
rst_n => cnt_500k[4].ACLR
rst_n => cnt_500k[5].ACLR
rst_n => cnt_500k[6].ACLR
rst_n => cnt_500k[7].ACLR
rst_n => cnt_500k[8].ACLR
rst_n => cnt_500k[9].ACLR
rst_n => cnt_500k[10].ACLR
rst_n => cnt_500k[11].ACLR
rst_n => cnt_500k[12].ACLR
rst_n => cnt_500k[13].ACLR
rst_n => cnt_500k[14].ACLR
rst_n => cnt_500k[15].ACLR
rst_n => cnt_500k[16].ACLR
rst_n => cnt_500k[17].ACLR
rst_n => cnt_500k[18].ACLR
rst_n => cnt_500k[19].ACLR
rst_n => cnt_500k[20].ACLR
rst_n => cnt_500k[21].ACLR
rst_n => cnt_500k[22].ACLR
rst_n => cnt_500k[23].ACLR
rst_n => cnt_500k[24].ACLR
rst_n => cnt_500k[25].ACLR
rst_n => cnt_500k[26].ACLR
rst_n => cnt_500k[27].ACLR
rst_n => cnt_500k[28].ACLR
rst_n => cnt_500k[29].ACLR
rst_n => cnt_500k[30].ACLR
rst_n => cnt_500k[31].ACLR
rst_n => data[0].PRESET
rst_n => data[1].ACLR
rst_n => data[2].PRESET
rst_n => data[3].ACLR
rst_n => data[4].PRESET
rst_n => data[5].ACLR
rst_n => data[6].ACLR
rst_n => data[7].ACLR
rst_n => data[8].ACLR
rst_n => data[9].ACLR
rst_n => data[10].PRESET
rst_n => data[11].ACLR
rst_n => data[12].ACLR
rst_n => data[13].PRESET
rst_n => data[14].PRESET
rst_n => data[15].PRESET
rst_n => data[16].ACLR
rst_n => data[17].PRESET
rst_n => data[18].ACLR
rst_n => data[19].PRESET
rst_n => pwm~reg0.ACLR
rst_n => cnt_1ms[0].ACLR
rst_n => cnt_1ms[1].ACLR
rst_n => cnt_1ms[2].ACLR
rst_n => cnt_1ms[3].ACLR
rst_n => cnt_1ms[4].ACLR
rst_n => cnt_1ms[5].ACLR
rst_n => cnt_1ms[6].ACLR
rst_n => cnt_1ms[7].ACLR
rst_n => cnt_1ms[8].ACLR
rst_n => cnt_1ms[9].ACLR
rst_n => cnt_1ms[10].ACLR
rst_n => cnt_1ms[11].ACLR
rst_n => cnt_1ms[12].ACLR
rst_n => cnt_1ms[13].ACLR
rst_n => cnt_1ms[14].ACLR
rst_n => cnt_1ms[15].ACLR
rst_n => cnt_1ms[16].ACLR
rst_n => cnt_1ms[17].ACLR
rst_n => cnt_1ms[18].ACLR
rst_n => cnt_1ms[19].ACLR
rst_n => cnt_1ms[20].ACLR
rst_n => cnt_1ms[21].ACLR
rst_n => cnt_1ms[22].ACLR
rst_n => cnt_1ms[23].ACLR
rst_n => cnt_1ms[24].ACLR
rst_n => cnt_1ms[25].ACLR
rst_n => cnt_1ms[26].ACLR
rst_n => cnt_1ms[27].ACLR
rst_n => cnt_1ms[28].ACLR
rst_n => cnt_1ms[29].ACLR
rst_n => cnt_1ms[30].ACLR
rst_n => cnt_1ms[31].ACLR
sig <= data[19].DB_MAX_OUTPUT_PORT_TYPE
ctrl1 <= ctrl1.DB_MAX_OUTPUT_PORT_TYPE
pwm <= pwm~reg0.DB_MAX_OUTPUT_PORT_TYPE


